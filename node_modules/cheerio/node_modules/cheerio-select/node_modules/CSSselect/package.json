{
  "name": "CSSselect",
  "version": "0.3.0",
  "description": "a rtl CSS selector engine",
  "author": {
    "name": "Felix Boehm",
    "email": "me@feedic.com"
  },
  "keywords": [
    "css",
    "selector"
  ],
  "main": "index.js",
  "engine": "",
  "repository": {
    "type": "git",
    "url": "git://github.com/fb55/cssselect.git"
  },
  "dependencies": {
    "CSSwhat": ">= 0.1"
  },
  "devDependencies": {
    "htmlparser2": ">= 2.2.8",
    "cheerio-soupselect": "*",
    "mocha": "*",
    "expect.js": "*"
  },
  "scripts": {
    "test": "mocha -u exports -R list tests/qwery tests/nwmatcher/scotch.js"
  },
  "readme": "#CSSselect [![Build Status](https://secure.travis-ci.org/fb55/CSSselect.png?branch=master)](http://travis-ci.org/fb55/CSSselect)\n\n##What?\n\nCSSselect is CSS selector engine. It returns a function that tests elements if they match a selector - checking needs to happen \"from the top\", like browser engines execute queries.\n\n##Why?\n\nJust take the following CSS query: `foo bar baz`. When the element named `baz` has like a billion children, every one of them needs to be checked if they match a query. Three times, to be precise, if you run a CSS query from the start to the end (as e.g. JSDOM does). Yup, that's slow.\n\nThis library checks every element once. The more complex the query, the greater the benefit.\n\n##How?\n\nBy stacking functions!\n\n##TODO\n\n1. The API needs to be improved\n2. Documentation needs to be written",
  "_id": "CSSselect@0.3.0",
  "_from": "CSSselect@0.x"
}
